{"version":3,"sources":["components/Todo.jsx","components/TodoList.jsx","App.js","index.js"],"names":["Todo","todo","toggleTodo","className","type","checked","complete","onChange","id","name","TodoList","todosProp","map","LOCAl_STORAGE_KEY","App","useState","todos","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","document","title","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","clear","window","location","reload","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAInC,OACE,8BACE,wBAAOC,UAAU,YAAjB,UACE,uBACEC,KAAK,WACLC,QAASJ,EAAKK,SACdC,SATR,WACEL,EAAWD,EAAKO,KASVL,UAAU,aAEXF,EAAKQ,UCZC,SAASC,EAAT,GAA8C,IAA1BC,EAAyB,EAAzBA,UAAWT,EAAc,EAAdA,WAC5C,OAAOS,EAAUC,KAAI,SAACX,GACpB,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKO,O,YCArBK,G,MAAoB,qBAwEXC,MAtEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAcC,mBAyCpB,OAvCAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQZ,IAChDQ,GAAaJ,EAASI,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QAAQb,EAAmBS,KAAKK,UAAUX,MACtD,CAACA,IAEJI,qBAAU,WACRQ,SAASC,MAAQ,aAChB,IA6BD,qBAAK1B,UAAU,cAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,cAACO,EAAD,CAAUC,UAAWK,EAAOd,WA/BpC,SAAoBM,GAClB,IAAMsB,EAAQ,YAAOd,GACff,EAAO6B,EAASC,MAAK,SAAC9B,GAAD,OAAUA,EAAKO,KAAOA,KACjDP,EAAKK,UAAYL,EAAKK,SACtBW,EAASa,SA6BL,uBAAOE,IAAKd,EAAad,KAAK,OAAOD,UAAU,cAC/C,sBAAKA,UAAU,eAAf,UACE,wBAAQA,UAAU,cAAc8B,QA5BxC,SAAuBC,GACrB,IAAMzB,EAAOS,EAAYiB,QAAQC,MACpB,KAAT3B,IACJQ,GAAS,SAACoB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE7B,GAAI8B,cAAU7B,KAAMA,EAAMH,UAAU,QAE9DY,EAAYiB,QAAQC,MAAQ,OAsBtB,sBAGA,wBAAQjC,UAAU,cAAc8B,QAtBxC,WACE,IAAMH,EAAWd,EAAMuB,QAAO,SAACtC,GAAD,OAAWA,EAAKK,YAC9CW,EAASa,IAoBH,gCAIF,wBAAQG,QArBd,WACET,aAAagB,QACbC,OAAOC,SAASC,UAmBqBxC,UAAU,eAA3C,uBAGA,sBAAKA,UAAU,aAAf,UACGa,EAAMuB,QAAO,SAACtC,GAAD,OAAWA,EAAKK,YAAUsC,OAD1C,6BChERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,W","file":"static/js/main.4f81d584.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id);\r\n  }\r\n  return (\r\n    <div>\r\n      <label className='listItems'>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.complete}\r\n          onChange={handleTodoClick}\r\n          className='checkbox'\r\n        />\r\n        {todo.name}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function TodoList({ todosProp, toggleTodo }) {\r\n  return todosProp.map((todo) => {\r\n    return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />;\r\n  });\r\n}\r\n","import TodoList from \"./components/TodoList.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\n\nconst LOCAl_STORAGE_KEY = \"todoWebsite.todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAl_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAl_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  useEffect(() => {\n    document.title = \"Todo App\";\n  }, []);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter((todo) => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  function handleClearAll() {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"listWrapper\">\n      <div className=\"todoElement\">\n        <div className=\"listElement\">\n          <h2 className=\"listSubtitle\">Todo:</h2>\n          <TodoList todosProp={todos} toggleTodo={toggleTodo} />\n        </div>\n        <input ref={todoNameRef} type=\"text\" className=\"listInput\" />\n        <div className=\"buttonParent\">\n          <button className=\"listButton1\" onClick={handleAddTodo}>\n            Add Todo\n          </button>\n          <button className=\"listButton2\" onClick={handleClearTodos}>\n            Clear Completed\n          </button>\n        </div>\n        <button onClick={handleClearAll} className=\"logoutButton\">\n          Clear All\n        </button>\n        <div className=\"bottomText\">\n          {todos.filter((todo) => !todo.complete).length} left to complete\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}